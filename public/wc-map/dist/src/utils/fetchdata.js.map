{"version":3,"file":"fetchdata.js","sources":["../../../src/utils/fetchdata.js"],"sourcesContent":["export async function fetchJson(url) {\r\n  if (!url) {\r\n    return;\r\n  }\r\n  try {\r\n    const response = await fetch(url);\r\n    if (!response.ok) {\r\n      throw new Error(`status: ${response.status}`);\r\n    }\r\n    const json = await response.json();\r\n    json._baseUrl = response.url;\r\n    return json;\r\n  } catch (error) {\r\n    console.error(`Error loading JSON data from ${url}: ${error.message}`);\r\n  }\r\n}\r\n\r\nexport async function fetchText(url) {\r\n  if (!url) {\r\n    return;\r\n  }\r\n  try {\r\n    const response = await fetch(url);\r\n    if (!response.ok) {\r\n      throw new Error(`status: ${response.status}`);\r\n    }\r\n    return await response.text();\r\n  } catch (error) {\r\n    console.error(`Error loading text data from ${url}: ${error.message}`);\r\n  }\r\n}\r\n\r\nexport async function fetchSource(layer) {\r\n  if (layer?.source?.type === 'geojson' && typeof layer.source.data === 'string') {\r\n    try {\r\n      const sourceUrl = layer._baseUrl ? new URL(layer.source.data, layer._baseUrl).href : layer.source.data;\r\n      const source = await fetchJson(sourceUrl);\r\n      if (!source) {\r\n        console.error(`Error loading GeoJSON data from ${sourceUrl}: no data`);\r\n        return;\r\n      }\r\n      layer.source.data = source;\r\n    } catch (error) {\r\n      console.error(`Error loading GeoJSON data: ${error.message}`);\r\n    }\r\n  }\r\n}\r\n\r\nexport async function fetchLayer(url, baseUrl) {\r\n  if (!url) {\r\n    return;\r\n  }\r\n  try {\r\n    if (baseUrl) {\r\n      url = new URL(url, baseUrl).href;\r\n    }\r\n    const layer = await fetchJson(url);\r\n    if (!layer) {\r\n      console.error(`Error loading layer from ${url}: no data`);\r\n      return;\r\n    }\r\n    if (layer.type === 'fill' || layer.type === 'line' || layer.type === 'symbol' || layer.type === 'circle' || layer.type === 'raster' || layer.type === 'background' || layer.type === 'fill-extrusion' || layer.type === 'hillshade' || layer.type === 'heatmap' || layer.type === 'sky' || layer.type === 'custom') {    \r\n      return layer;\r\n    } else {\r\n      throw new Error(`Unknown GeoJSON type: ${data.type}`);\r\n    }\r\n  } catch (error) {\r\n    console.error(`Error loading GeoJSON data from ${url}: ${error.message}`);\r\n  }\r\n}"],"names":[],"mappings":"AAAO,eAAe,SAAS,CAAC,GAAG,EAAE;AACrC,EAAE,IAAI,CAAC,GAAG,EAAE;AACZ,IAAI,OAAO;AACX,GAAG;AACH,EAAE,IAAI;AACN,IAAI,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC;AACtC,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE;AACtB,MAAM,MAAM,IAAI,KAAK,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACpD,KAAK;AACL,IAAI,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;AACvC,IAAI,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC;AACjC,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,6BAA6B,EAAE,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC3E,GAAG;AACH,CAAC;AACD;AACO,eAAe,SAAS,CAAC,GAAG,EAAE;AACrC,EAAE,IAAI,CAAC,GAAG,EAAE;AACZ,IAAI,OAAO;AACX,GAAG;AACH,EAAE,IAAI;AACN,IAAI,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC;AACtC,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE;AACtB,MAAM,MAAM,IAAI,KAAK,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACpD,KAAK;AACL,IAAI,OAAO,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;AACjC,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,6BAA6B,EAAE,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC3E,GAAG;AACH,CAAC;AACD;AACO,eAAe,WAAW,CAAC,KAAK,EAAE;AACzC,EAAE,IAAI,KAAK,EAAE,MAAM,EAAE,IAAI,KAAK,SAAS,IAAI,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE;AAClF,IAAI,IAAI;AACR,MAAM,MAAM,SAAS,GAAG,KAAK,CAAC,QAAQ,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;AAC7G,MAAM,MAAM,MAAM,GAAG,MAAM,SAAS,CAAC,SAAS,CAAC,CAAC;AAChD,MAAM,IAAI,CAAC,MAAM,EAAE;AACnB,QAAQ,OAAO,CAAC,KAAK,CAAC,CAAC,gCAAgC,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;AAC/E,QAAQ,OAAO;AACf,OAAO;AACP,MAAM,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC;AACjC,KAAK,CAAC,OAAO,KAAK,EAAE;AACpB,MAAM,OAAO,CAAC,KAAK,CAAC,CAAC,4BAA4B,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACpE,KAAK;AACL,GAAG;AACH;;;;"}