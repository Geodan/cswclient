{"version":3,"file":"VectorLayer.js","sources":["../../../../../node_modules/ol/renderer/canvas/VectorLayer.js"],"sourcesContent":["/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    let render =\n      (replayGroup && !replayGroup.isEmpty()) ||\n      (declutterExecutorGroup && !declutterExecutorGroup.isEmpty());\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n"],"names":["transformToString","intersectsExtent","defaultRenderOrder","wrapCoordinateX","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","getSquaredRenderTolerance"],"mappings":"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","x_google_ignoreList":[0]}