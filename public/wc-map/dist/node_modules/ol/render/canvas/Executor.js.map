{"version":3,"file":"Executor.js","sources":["../../../../../node_modules/ol/render/canvas/Executor.js"],"sourcesContent":["/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n"],"names":["createTransform","composeTransform","applyTransform","transformSetFromArray","CanvasInstruction"],"mappings":"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","x_google_ignoreList":[0]}