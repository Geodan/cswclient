{"version":3,"file":"KeyboardPan.js","sources":["../../../../node_modules/ol/interaction/KeyboardPan.js"],"sourcesContent":["/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n"],"names":["rotateCoordinate"],"mappings":";;;;;;AAAA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,WAAW,SAAS,WAAW,CAAC;AACtC;AACA;AACA;AACA,EAAE,WAAW,CAAC,OAAO,EAAE;AACvB,IAAI,KAAK,EAAE,CAAC;AACZ;AACA,IAAI,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,iBAAiB,GAAG,UAAU,eAAe,EAAE;AACxD,MAAM;AACN,QAAQ,cAAc,CAAC,eAAe,CAAC,IAAI,iBAAiB,CAAC,eAAe,CAAC;AAC7E,QAAQ;AACR,KAAK,CAAC;AACN;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,UAAU;AACnB,MAAM,OAAO,CAAC,SAAS,KAAK,SAAS;AACrC,UAAU,OAAO,CAAC,SAAS;AAC3B,UAAU,IAAI,CAAC,iBAAiB,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,KAAK,SAAS,GAAG,OAAO,CAAC,QAAQ,GAAG,GAAG,CAAC;AAC7E;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,WAAW;AACpB,MAAM,OAAO,CAAC,UAAU,KAAK,SAAS,GAAG,OAAO,CAAC,UAAU,GAAG,GAAG,CAAC;AAClE,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,WAAW,CAAC,eAAe,EAAE;AAC/B,IAAI,IAAI,SAAS,GAAG,KAAK,CAAC;AAC1B,IAAI,IAAI,eAAe,CAAC,IAAI,IAAI,SAAS,CAAC,OAAO,EAAE;AACnD,MAAM,MAAM,QAAQ;AACpB,QAAQ,eAAe,CAAC,aAAa;AACrC,OAAO,CAAC;AACR,MAAM,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC;AAC/B,MAAM;AACN,QAAQ,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC;AACxC,SAAS,GAAG,IAAI,GAAG,CAAC,IAAI;AACxB,UAAU,GAAG,IAAI,GAAG,CAAC,IAAI;AACzB,UAAU,GAAG,IAAI,GAAG,CAAC,KAAK;AAC1B,UAAU,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC;AACxB,QAAQ;AACR,QAAQ,MAAM,GAAG,GAAG,eAAe,CAAC,GAAG,CAAC;AACxC,QAAQ,MAAM,IAAI,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC;AACnC,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;AACtE,QAAQ,IAAI,MAAM,GAAG,CAAC;AACtB,UAAU,MAAM,GAAG,CAAC,CAAC;AACrB,QAAQ,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,EAAE;AAC7B,UAAU,MAAM,GAAG,CAAC,aAAa,CAAC;AAClC,SAAS,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,EAAE;AACpC,UAAU,MAAM,GAAG,CAAC,aAAa,CAAC;AAClC,SAAS,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,KAAK,EAAE;AACrC,UAAU,MAAM,GAAG,aAAa,CAAC;AACjC,SAAS,MAAM;AACf,UAAU,MAAM,GAAG,aAAa,CAAC;AACjC,SAAS;AACT,QAAQ,MAAM,KAAK,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AACvC,QAAQA,MAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;AACpD,QAAQ,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AACzC,QAAQ,QAAQ,CAAC,cAAc,EAAE,CAAC;AAClC,QAAQ,SAAS,GAAG,IAAI,CAAC;AACzB,OAAO;AACP,KAAK;AACL,IAAI,OAAO,CAAC,SAAS,CAAC;AACtB,GAAG;AACH;;;;","x_google_ignoreList":[0]}